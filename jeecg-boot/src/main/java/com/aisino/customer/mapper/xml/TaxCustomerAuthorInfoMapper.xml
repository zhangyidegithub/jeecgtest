<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aisino.customer.mapper.TaxCustomerAuthorInfoMapper">

	<delete id="deleteByMainId" parameterType="java.lang.String">
		DELETE 
		FROM  TAX_CUSTOMER_AUTHOR_INFO 
		WHERE
			 CUSTOMER_ID = #{id} 		
	</delete>
	
	<select id="selectByMainId" parameterType="java.lang.String" resultType="com.aisino.customer.entity.TaxCustomerAuthorInfo">
		SELECT * 
		FROM  TAX_CUSTOMER_AUTHOR_INFO
		WHERE
			 CUSTOMER_ID = #{id} ORDER BY created_date desc
	</select>

	<delete id="deleteByCheckCode">
		DELETE
		FROM  TAX_CUSTOMER_AUTHOR_INFO
		WHERE
			 CUSTOMER_ID = #{customerId} and CHECK_CODE=#{checkCode}
	</delete>

	<delete id="deleteByAuthorIds"  parameterType = "java.util.List">
		DELETE  FROM TAX_CUSTOMER_AUTHOR_INFO i WHERE EXISTS(
			SELECT * FROM TAX_CUSTOMER_AUTHOR a WHERE i.CUSTOMER_ID=a.CUSTOMER_ID and i.CHECK_CODE=a.CHECK_CODE
			AND a.id IN
			<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		)
	</delete>
	<select id="selectEffectiveAuth" resultType="com.aisino.customer.entity.TaxCustomerAuthorInfo">
		select * from (
			select info.*,row_number() over (partition by customer_id,check_code order by created_date desc) rn from tax_customer_author_info info
			where  to_date(to_char(sysdate,'yyyy-mm-dd hh24:mi:ss'),'yyyy-mm-dd hh24:mi:ss')
			between
			to_date(to_char(author_begin_date,'yyyy-mm-dd hh24:mi:ss'),'yyyy-mm-dd hh24:mi:ss')
			and
			to_date(to_char(author_end_date,'yyyy-mm-dd hh24:mi:ss'),'yyyy-mm-dd hh24:mi:ss')
			and customer_id=#{customerId} and check_code=#{checkCode}
      	)b where rn = 1
	</select>
</mapper>
